{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","ErrorMessage","src","imgError","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","length","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","objectFit","style","CharList","charList","newItemLoading","charEnded","characterSelected","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","arr","item","clazz","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","lenght","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de8a3bc2.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import './spinner.scss';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner-block__wrap\">\n      <div className=\"spinner-block\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n};\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import imgError from './error.gif';\nimport './errorMessage.scss';\n\nconst ErrorMessage = () => {\n  return (\n    <img \n      src={imgError}\n      className='error-image'\n      alt='errorImage' />\n  )\n};\n\nexport default ErrorMessage;","\nclass MarvelService {\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  _apiKey = 'apikey=f4799074d87dd765dba2654271793059';\n  _baseOffset = 210;\n\n\n  getResource = async (url) => {\n    let res = await fetch(url);\n\n    if(!res.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  getAllCharacters = async (offset = this._baseOffset) => {\n    const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n    return res.data.results.map(this._transformCharacter);\n  };\n\n  getCharacter = async (id) => {\n    const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n    return this._transformCharacter(res.data.results[0]);\n  };\n\n  _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? char.description.length > 230 ? char.description.slice(0, 230) + '...' : char.description : 'There is no descripton for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    }\n  }\n}\n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nclass RandomChar extends Component {\n  state = {\n    char: {},\n    loading: true,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n    // this.timerId = setInterval(this.updateChar, 15000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({\n      char,\n      loading: false,\n    });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"randomchar\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!\n            <br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">Or choose another one</p>\n          <button onClick={this.updateChar} className=\"button button__main\">\n            <div className=\"inner\">try it</div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n\n  if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n        characterSelected: null\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            const active = this.state.characterSelected === item.id; \n            const clazz = active ? 'char__item char__item_selected' : 'char__item';\n            \n            return (\n                <li \n                    className={clazz}\n                    key={item.id}\n                    onClick={() => {\n                        this.setState({characterSelected: item.id}) \n                        this.props.onCharSelected(item.id)\n                    }}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <p className=\"char__name\">{item.name}</p>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : null}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    };\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if(!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n          char,\n          loading: false,\n        });\n    };\n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        });\n    };\n    \n    onError = () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n    };\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = { objectFit: \"cover\" };\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = { objectFit: \"contain\" };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.lenght > 0 ? null : \"There is no comics with this character\"}\n                \n                {\n                    comics.map((item, i) => {\n                        if(i > 9) return;\n                        \n                        return (\n                            <li className=\"char__comics-item\"\n                                key={i}>\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n\n    this.setState({\n      error: true\n    })\n  }\n\n  render() {\n    if(this.state.error === true) {\n      return <ErrorMessage />\n    }\n\n    return this.props.children;\n  }\n};\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    };\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}